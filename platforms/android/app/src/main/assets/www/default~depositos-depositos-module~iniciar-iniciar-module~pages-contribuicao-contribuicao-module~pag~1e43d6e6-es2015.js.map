{"version":3,"sources":["./src/app/class/recibos.ts","./src/app/services/contribuintes.service.ts","./src/app/services/crud.service.ts"],"names":[],"mappings":"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","file":"default~depositos-depositos-module~iniciar-iniciar-module~pages-contribuicao-contribuicao-module~pag~1e43d6e6-es2015.js","sourcesContent":["export class Recibos {\r\n  nrorecibo: number;\r\n  nomenorecibo: string;\r\n  entregaweb: string;\r\n  dtcobranca: Date;\r\n  reagendado?: string;\r\n  dtreagendamento?: Date;\r\n  valorgerado: number;\r\n  statusrec: string;\r\n  dtbaixa?: Date;\r\n  parcela: string;\r\n  via: number;\r\n  motivodevol?: string;\r\n  enderecosecundario: string;\r\n  numerosecundario: string;\r\n  bairrosecundario: string;\r\n  cidadesecundario: string;\r\n  complementosecundario: string;\r\n  cepsecundario: string;\r\n  telefonesecundario: string;\r\n  desccategoria: string;\r\n  observacoes: string;\r\n  envioservidor: string;\r\n  codmensageiro: number;\r\n\r\n  constructor(nrorecibo: number, nomenorecibo: string, entregaweb: string,\r\n    dtcobranca: Date, reagendado: any, dtreagendamento: Date,\r\n    valorgerado: number, statusrec: string, dtbaixa: Date, parcela: string, via: number,\r\n    motivodevol: any, enderecosecundario: string, numerosecundario: string, bairrosecundario: string,\r\n    cidadesecundario: string, complementosecundario: string, cepsecundario: string, telefonesecundario: string,\r\n    desccategoria: string, observacoes: string, envioservidor: string, codmensageiro: number) {\r\n\r\n    this.nrorecibo = nrorecibo;\r\n    this.nomenorecibo = nomenorecibo;\r\n    this.entregaweb = entregaweb;\r\n    this.dtcobranca = dtcobranca;\r\n    this.reagendado = reagendado;\r\n    this.dtreagendamento = dtreagendamento;\r\n    this.valorgerado = valorgerado;\r\n    this.statusrec = statusrec;\r\n    this.dtbaixa = dtbaixa;\r\n    this.parcela = parcela;\r\n    this.via = via;\r\n    this.motivodevol = motivodevol;\r\n    this.enderecosecundario = enderecosecundario;\r\n    this.numerosecundario = numerosecundario;\r\n    this.bairrosecundario = bairrosecundario;\r\n    this.cidadesecundario = cidadesecundario;\r\n    this.complementosecundario = complementosecundario;\r\n    this.cepsecundario = cepsecundario;\r\n    this.telefonesecundario = telefonesecundario;\r\n    this.desccategoria = desccategoria;\r\n    this.observacoes = observacoes;\r\n    this.envioservidor = envioservidor;\r\n    this.codmensageiro = codmensageiro;\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Resumo } from '../interfaces/resumo';\nimport { ResumoPorCidade } from '../interfaces/resumoPorCidade';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Recibos } from '../class/recibos';\nimport { Devolvidos } from '../Class/devolvidos';\n\n\nconst URL = environment.url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContribuintesService {\n\n  dtInicio:string;\n  dtFim:string;\n\n  \n  constructor( private http: HttpClient, private route: ActivatedRoute, private router: Router ) { }\n\n  \n  // Pega as informações de recibos dos contribuintes no WebServices. \n  getListaRecibos() {\n    // http://192.168.0.243:8081/recibos/listarecibosapp?cod=315&startDate=2019-07-01&endDate=2019-07-31\n    return this.http.get<Recibos[]>(`${ URL }/recibos/listarecibosapp?cod=315&startDate=2019-07-01&endDate=2019-07-31`);\n  }\n  // Detalhes do recibo.\n  getRecibosDetalhe( nrorecibo: number ) {\n    // http://192.168.0.243:8081/recibos/app/11382872\n    return this.http.get<Recibos>(`${ URL }/recibos/app/${ nrorecibo }`);\n  }\n  // Pega as informações de resumo do mensageiro no WebServices.\n  getResumo(dtStart: string, dtEnd: string) {\n    this.dtInicio = dtStart;\n    this.dtFim = dtEnd\n    // http://192.168.0.243:8081/recibos/resumomensageiro?cod=11&startDate=2017-01-01&endDate=2018-01-01\n    return this.http.get<Resumo>(`${ URL }/recibos/resumomensageiro?cod=315&startDate=${ dtStart }&endDate=${ dtEnd }`);\n  }\n  // Pega as informações de resumo do mensageiro por cidade.\n  getResumoPorCidade() {\n    // http://192.168.0.243:8081/recibos/mensageiroporcidade1?cod=630&startDate=2019-01-01&endDate=2019-03-10\n    return this.http.get<ResumoPorCidade>(`${ URL }/recibos/mensageiroporcidade1?cod=315&startDate=${ this.dtInicio }&endDate=${ this.dtFim }`);\n  }\n  // Atualiza os recibos no local storage\n  putRecibo( recibo: Recibos ) {\n    // http://localhost:8081/recibos/11369854\n    return this.http.put<Recibos>(`${ URL }/recibos/${ recibo.nrorecibo }`, recibo, {\n      headers: new HttpHeaders ({\n        'Content-Type': 'application/json' \n      })\n    });\n  }\n  // Cria recibos devolvidos\n  postDevolvidos( devolvido: Devolvidos ) {\n    // http://192.168.0.243:8081/devolvido/17044484\n    return this.http.post<Devolvidos>(`${ URL }/devolvido`, devolvido, {\n      headers: new HttpHeaders ({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DatabaseService } from './database.service';\nimport { Recibos } from '../class/recibos';\nimport { SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { environment } from '../../environments/environment';\nimport { Devolvidos } from '../Class/devolvidos';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  constructor( private dbService: DatabaseService ) { }\n\n  // Método para inserir recibos no banco do app\n  public async insert( recibos: Recibos ) {\n\n    try {\n      const db = await this.dbService.getDB();\n      let sql = 'insert into recibos (nrorecibo, nomenorecibo, entregaweb, dtcobranca, reagendado, dtreagendamento, valorgerado, statusrec, dtbaixa, parcela, via, motivodevol,'\n        + ' enderecosecundario, numerosecundario, bairrosecundario, cidadesecundario, complementosecundario, cepsecundario, telefonesecundario, desccategoria, '\n        + ' observacoes, envioservidor, codmensageiro) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)';\n      let data = [recibos.nrorecibo, recibos.nomenorecibo, recibos.entregaweb, recibos.dtcobranca, recibos.reagendado, recibos.dtreagendamento, recibos.valorgerado,\n      recibos.statusrec, recibos.dtbaixa, recibos.parcela, recibos.via, recibos.motivodevol, recibos.enderecosecundario, recibos.numerosecundario,\n      recibos.bairrosecundario, recibos.cidadesecundario, recibos.complementosecundario, recibos.cepsecundario, recibos.telefonesecundario, recibos.desccategoria,\n      recibos.observacoes, recibos.envioservidor, recibos.codmensageiro];\n      try {\n        await db.executeSql(sql, data);\n        // console.log('Recibos inseridos');\n      }\n      catch (e) {\n        return console.error(e);\n      }\n    }\n    catch (e_1) {\n      return console.error(e_1);\n    }\n  }\n\n  public async insertDevolvidos( devolvidos: Devolvidos ) {\n\n    try {\n      const db = await this.dbService.getDB();\n      let sql = 'insert into recibosDevolvidos (nrorecibo, dtdevol, horaoper, dtoperacao, codoperador, codusuario, '\n      + 'motivodevolucao, statendimento, dscatendimento) values(?,?,?,?,?,?,?,?,?)';\n      let data = [devolvidos.nrorecibo, devolvidos.dtdevol, devolvidos.horaoper, devolvidos.dtoperacao, devolvidos.codoperador, devolvidos.codusuario, devolvidos.motivodevolucao,\n        devolvidos.statendimento, devolvidos.dscatendimento];\n      try {\n        await db.executeSql(sql, data);\n        // console.log('Recibos inseridos');\n      }\n      catch (e) {\n        return console.error(e);\n      }\n    }\n    catch (e_1) {\n      return console.error(e_1);\n    }\n  }\n\n // Para selecionar todos os recibos com status de Gerado no banco do app\n  public getAll() {\n    return this.dbService.getDB().then((db: SQLiteObject) => {\n      let sql = \"select * from recibos where statusrec = 'G'\";\n      let data: any[];\n      return db.executeSql(sql, data)\n        .then((data: any) => {\n          if (data.rows.length > 0) {\n            var recibos = new Array<Recibos>();\n            for (let i = 0; i < data.rows.length; i++) {\n              let tmp = data.rows.item(i);\n              var recibo = new Recibos(tmp.nrorecibo, tmp.nomenorecibo, tmp.entregaweb, tmp.dtcobranca, tmp.reagendado, tmp.dtreagendamento, tmp.valorgerado,\n                tmp.statusrec, tmp.dtbaixa, tmp.parcela, tmp.via, tmp.motivodevol, tmp.enderecosecundario, tmp.numerosecundario,\n                tmp.bairrosecundario, tmp.cidadesecundario, tmp.complementosecundario, tmp.cepsecundario, tmp.telefonesecundario, tmp.desccategoria,\n                tmp.observacoes, tmp.envioservidor, tmp.codmensageiro)\n              recibos.push(recibo);\n            }\n            return recibos;\n          } else {\n            return new Array<Recibos>();\n          }\n        }).catch(e => {\n          console.error(e);\n        });\n    }).catch(e => {\n      console.error(e);\n    });\n  }\n\n  // Para selecionar o recibo por id(nrorecibo)\n  public getById( nrorecibo: number ) {\n    return this.dbService.getDB()\n      .then((db: SQLiteObject) => {\n        let sql = 'select * from recibos where nrorecibo = ?';\n        let data = [nrorecibo];\n        return db.executeSql(sql, data)\n          .then((data) => {\n            if (data.rows.length > 0) {\n              let item = data.rows.item(0);\n              let recibo = new Recibos(item.nrorecibo, item.nomenorecibo, item.entregaweb, item.dtcobranca, item.reagendado, item.dtreagendamento, item.valorgerado,\n                item.statusrec, item.dtbaixa, item.parcela, item.via, item.motivodevol, item.enderecosecundario, item.numerosecundario,\n                item.bairrosecundario, item.cidadesecundario, item.complementosecundario, item.cepsecundario, item.telefonesecundario, item.desccategoria,\n                item.observacoes, item.envioservidor, item.codmensageiro);\n              console.log('Consulta realizada');\n              return recibo;\n            } else {\n              return null;\n            }\n          }).catch(\n            e => console.error(e)\n          );\n      }).catch(\n        e => console.error(e)\n      );\n  }\n\n  // Para atualizar o recibo nos casos de (Doação, Reagendamento ou Devolução)\n  public update( recibo: Recibos, option: string ) {\n    return this.dbService.getDB().then(\n      (db: SQLiteObject) => { \n        let sql;\n        let data;\n\n        switch(option)  {\n\n          case 'doacao':{\n            sql = 'UPDATE recibos SET valorgerado  = ?, statusrec = ?, dtbaixa = ?, motivodevol = ? WHERE nrorecibo = ?';\n            data = [recibo.valorgerado, recibo.statusrec, recibo.dtbaixa, recibo.motivodevol, recibo.nrorecibo]\n            break;\n          }\n          \n          case 'reagendamento':{\n            sql = 'UPDATE recibos SET reagendado = ?, dtreagendamento = ? WHERE nrorecibo = ?';\n            data = [recibo.reagendado, recibo.dtreagendamento, recibo.nrorecibo]\n            break;\n          }\n          \n          case 'devolucao':{\n            sql = 'UPDATE recibos SET statusrec = ? WHERE nrorecibo = ?';\n            data = [recibo.statusrec, recibo.nrorecibo]\n            break;\n          }\n        }\n\n        return db.executeSql(sql, data).then(\n          () => console.log(\"Recibo Atualizado\")\n        ).catch(\n          e => console.error(e)\n        ); //passar parametro e a string;\n      }\n    ).catch(e => console.error(e));\n  }\n}\n"],"sourceRoot":""}