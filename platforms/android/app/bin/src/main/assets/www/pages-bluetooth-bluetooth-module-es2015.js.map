{"version":3,"sources":["./src/app/pages/bluetooth/bluetooth.page.html","./src/app/pages/bluetooth/bluetooth.module.ts","./src/app/pages/bluetooth/bluetooth.page.scss","./src/app/pages/bluetooth/bluetooth.page.ts"],"names":[],"mappings":"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","file":"pages-bluetooth-bluetooth-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n    <ion-toolbar color=\\\"dark\\\">\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Bluetooth</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n    <ion-button full color=\\\"success\\\" (click)=\\\"listPairedDevices()\\\" (click)=\\\"presentLoading()\\\">\\r\\n        <ion-icon name=\\\"refresh\\\"></ion-icon>&nbsp;Atualizar Dispositivos Bluetooth</ion-button>\\r\\n    <ion-row>\\r\\n        <ion-col>\\r\\n            <ion-list ngDefaultControl radio-group [(ngModel)]=\\\"pairedDeviceID\\\" *ngIf=\\\"listToggle\\\">\\r\\n                <ion-item *ngFor=\\\"let i of pairedList;let j=index\\\">\\r\\n                    <ion-label>{{i.name}}</ion-label>\\r\\n                    <ion-radio value=\\\"{{j}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-button full color=\\\"success\\\" *ngIf=\\\"listToggle\\\" (click)=\\\"selectDevice()\\\">\\r\\n        <ion-icon name=\\\"bluetooth\\\"></ion-icon>&nbsp;Conectar dispositivo Bluetooth</ion-button>\\r\\n    <ion-list>\\r\\n        <ion-item placeholder=\\\"Digite os dados que deseja enviar\\\">\\r\\n            <ion-textarea placeholder=\\\"Digite os dados que deseja enviar\\\"></ion-textarea>\\r\\n            <ion-input type=\\\"text\\\" name=\\\"datasend\\\" [(ngModel)]=\\\"dataSend\\\"></ion-input>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-button color=\\\"success\\\" fill=\\\"outline\\\" (click)=\\\"sendData()\\\">\\r\\n        <ion-icon name=\\\"send\\\"></ion-icon>&nbsp;Enviar dados via Bluetooth\\r\\n    </ion-button>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BluetoothPage } from './bluetooth.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BluetoothPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [BluetoothPage]\r\n})\r\nexport class BluetoothPageModule {}\r\n","module.exports = \"page-bluetooth .submit-btn {\\n  color: #10dc60;\\n  background: rgba(0, 0, 0, 0);\\n  border-radius: 30px !important;\\n  border: 1px solid #FFF;\\n}\\npage-bluetooth .my-custom-class {\\n  --background: #f4f5f8;\\n  --spinner-color: #10dc60;\\n  color: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYmx1ZXRvb3RoL0M6XFx0ZW1wXFx3cy1pb25pY1xcWEV4cHJlc3NBcHAvc3JjXFxhcHBcXHBhZ2VzXFxibHVldG9vdGhcXGJsdWV0b290aC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2JsdWV0b290aC9ibHVldG9vdGgucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksY0FBQTtFQUNBLDRCQUFBO0VBQ0EsOEJBQUE7RUFDQSxzQkFBQTtBQ0FSO0FERUk7RUFDSSxxQkFBQTtFQUNBLHdCQUFBO0VBQ0EsV0FBQTtBQ0FSIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYmx1ZXRvb3RoL2JsdWV0b290aC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwYWdlLWJsdWV0b290aCB7XHJcbiAgICAuc3VibWl0LWJ0biB7XHJcbiAgICAgICAgY29sb3I6ICMxMGRjNjA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwKTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0ZGRjtcclxuICAgIH1cclxuICAgIC5teS1jdXN0b20tY2xhc3Mge1xyXG4gICAgICAgIC0tYmFja2dyb3VuZDogI2Y0ZjVmODtcclxuICAgICAgICAtLXNwaW5uZXItY29sb3I6ICMxMGRjNjA7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbn0iLCJwYWdlLWJsdWV0b290aCAuc3VibWl0LWJ0biB7XG4gIGNvbG9yOiAjMTBkYzYwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDApO1xuICBib3JkZXItcmFkaXVzOiAzMHB4ICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNGRkY7XG59XG5wYWdlLWJsdWV0b290aCAubXktY3VzdG9tLWNsYXNzIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjRmNWY4O1xuICAtLXNwaW5uZXItY29sb3I6ICMxMGRjNjA7XG4gIGNvbG9yOiAjZmZmO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, AlertController, ToastController, LoadingController } from '@ionic/angular';\r\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bluetooth',\r\n  templateUrl: './bluetooth.page.html',\r\n  styleUrls: ['./bluetooth.page.scss'],\r\n})\r\nexport class BluetoothPage implements OnInit {\r\n  pairedList: pairedlist;\r\n  listToggle: boolean = false;\r\n  pairedDeviceID: number = 0;\r\n  dataSend: string = \"\";\r\n\r\n  constructor(public navCtrl: NavController, private alertCtrl: AlertController, public loadingController: LoadingController,\r\n              private bluetoothSerial: BluetoothSerial, private toastCtrl: ToastController) {\r\n    this.checkBluetoothEnabled();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async presentLoading() {\r\n    const loading = await this.loadingController.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Por favor aguarde...',\r\n      spinner: \"bubbles\",\r\n      duration: 1500\r\n    });\r\n    await loading.present();\r\n\r\n  }\r\n\r\n  checkBluetoothEnabled() {\r\n    this.bluetoothSerial.isEnabled().then(success => {\r\n      this.listPairedDevices();\r\n    }, error => {\r\n      this.showError(\"Habilite o Bluetooth\")\r\n    });\r\n  }\r\n\r\n  listPairedDevices() {\r\n    this.bluetoothSerial.list().then(success => {\r\n      this.pairedList = success;\r\n      this.listToggle = true;\r\n    }, error => {\r\n      this.showError(\"Habilite o Bluetooth\")\r\n      this.listToggle = false;\r\n    });\r\n  }\r\n\r\n  selectDevice() {\r\n    let connectedDevice = this.pairedList[this.pairedDeviceID];\r\n    if (!connectedDevice.address) {\r\n      this.showError('Selecione o dispositivo pareado para conectar');\r\n      return;\r\n    }\r\n    let address = connectedDevice.address;\r\n    let name = connectedDevice.name;\r\n\r\n    this.connect(address);\r\n  }\r\n\r\n  connect(address) {\r\n    // Attempt to connect device with specified address, call app.deviceConnected if success\r\n    this.bluetoothSerial.connect(address).subscribe(success => {\r\n      this.deviceConnected();\r\n      this.showToast(\"Dispositivo conectado!\");\r\n    }, error => {\r\n      this.showError(\"Erro: Conecte o dispositivo\");\r\n    });\r\n  }\r\n\r\n  deviceConnected() {\r\n    // Subscribe to data receiving as soon as the delimiter is read\r\n    this.bluetoothSerial.subscribe('\\n').subscribe(success => {\r\n      this.handleData(success);\r\n      this.showToast(\"Conexão bem sucedida\");\r\n    }, error => {\r\n      this.showError(error);\r\n    });\r\n  }\r\n\r\n  deviceDisconnected() {\r\n    // Unsubscribe from data receiving\r\n    this.bluetoothSerial.disconnect();\r\n    this.showToast(\"Dispositivo Desconectado\");\r\n  }\r\n\r\n  handleData(data) {\r\n    this.showToast(data);\r\n  }\r\n\r\n  sendData() {\r\n    this.dataSend+='\\n';\r\n    this.showToast(this.dataSend);\r\n\r\n    this.bluetoothSerial.write(this.dataSend).then(success => {\r\n      this.showToast(success);\r\n    }, error => {\r\n      this.showError(error)\r\n    });\r\n  }\r\n\r\n  async showError(error) {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Error',\r\n      subHeader: error,\r\n      buttons: ['Ok']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  async showToast(msj) {\r\n    const toast = await this.toastCtrl.create({\r\n      message: msj,\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n}\r\n\r\ninterface pairedlist {\r\n  \"class\": number,\r\n  \"id\": string,\r\n  \"address\": string,\r\n  \"name\": string\r\n}\r\n"],"sourceRoot":""}